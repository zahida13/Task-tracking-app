[{"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\index.js":"1","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\App.js":"2","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\Navbar.jsx":"4","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\store\\store.js":"5","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\auth\\authSlice.js":"6","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\task\\taskSlice.js":"7","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\auth\\authService.js":"8","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\task\\taskService.js":"9","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\Login.jsx":"10","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\AddNewUser.jsx":"11","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\AllUsers.jsx":"12","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\AllTasks.jsx":"13","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\UserTasks.jsx":"14","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\Spinner.jsx":"15"},{"size":659,"mtime":1677059986627,"results":"16","hashOfConfig":"17"},{"size":1132,"mtime":1677150987122,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1676988677883,"results":"19","hashOfConfig":"17"},{"size":838,"mtime":1677152447441,"results":"20","hashOfConfig":"17"},{"size":260,"mtime":1677059513782,"results":"21","hashOfConfig":"17"},{"size":4631,"mtime":1677152875113,"results":"22","hashOfConfig":"17"},{"size":3825,"mtime":1677152027287,"results":"23","hashOfConfig":"17"},{"size":1582,"mtime":1677152926657,"results":"24","hashOfConfig":"17"},{"size":1599,"mtime":1677152169487,"results":"25","hashOfConfig":"17"},{"size":3107,"mtime":1677148633571,"results":"26","hashOfConfig":"17"},{"size":3543,"mtime":1677067740295,"results":"27","hashOfConfig":"17"},{"size":6129,"mtime":1677163135154,"results":"28","hashOfConfig":"17"},{"size":2341,"mtime":1677163229408,"results":"29","hashOfConfig":"17"},{"size":3776,"mtime":1677164597408,"results":"30","hashOfConfig":"17"},{"size":211,"mtime":1677148613055,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1c6fqyv",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\index.js",[],[],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\App.js",["83","84","85"],[],"import './App.css';\nimport Login from './components/Login';\nimport Navbar from './components/Navbar';\nimport UserTasks from './components/UserTasks';\nimport AddNewUser from './components/AddNewUser';\nimport AllUsers from './components/AllUsers';\nimport { useSelector } from 'react-redux';\nimport AllTasks from './components/AllTasks'\n\nimport {  \n  BrowserRouter as Router,  \n  Routes,  \n  Route,  \n  Link  \n}   \nfrom 'react-router-dom';  \nfunction App() {\n  // const { user } = useSelector(state => state.auth)\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n  return (\n    \n        <Router>\n    <div className=\"App\">\n        {!user ? <Login /> :\n          user?.isAdmin  == false ? <>\n          <Routes>\n              <Route path='/' element={<UserTasks />}/>\n        </Routes>\n        </> :\n          <>\n      <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<AllTasks />} /> \n          <Route path='/add' element={<AddNewUser />} />\n          <Route path='/users' element={<AllUsers />} />\n\n</Routes>\n       \n          </>\n           }\n        \n        \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\Navbar.jsx",["86"],[],"import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../features/auth/authSlice'\r\nconst Navbar = () => {\r\n   const dispatch = useDispatch()\r\n    return (\r\n    <div className='flex justify-center items-center my-5'>\r\n            \r\n      <div className='flex justify-around items-center space-x-4 text-2xl !font-normal bg-purple-900 text-white p-3 rounded w-1/2'>\r\n                <Link to={\"/\"} className='hover:underline'>Tasks</Link>\r\n          <Link to=\"/users\" className='hover:underline'>Users</Link>\r\n          <Link to=\"/add\" className='hover:underline'>Add New User</Link>\r\n          <Link className='hover:underline  ' to=\"/\" onClick={() => dispatch(logout())}> Log Out</Link>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\store\\store.js",[],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\auth\\authSlice.js",["87"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport authService from \"./authService\";\r\n\r\n// GetUser From Localstorage\r\nconst token = localStorage.getItem(\"token\");\r\nconst user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\nconst initialState = {\r\n  user:  !user ? null : user,\r\n  users: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\n// Register User\r\n\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (userData, thunkApi) => {\r\n    try {\r\n    const token = thunkApi.getState().auth.user.token;\r\n\r\n      return await authService.register(token, userData);\r\n    } catch (err) {\r\n      const message =\r\n        (err.message && err.response.data && err.response.data.message) ||\r\n        err.message ||\r\n        err.toString();\r\n\r\n      return thunkApi.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login User\r\n\r\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkApi) => {\r\n  try {\r\n    return await authService.login(user);\r\n  } catch (err) {\r\n    const message =\r\n      (err.message && err.response.data && err.response.data.message) ||\r\n      err.message ||\r\n      err.toString();\r\n\r\n    return thunkApi.rejectWithValue(message);\r\n  }\r\n});\r\n\r\n\r\nexport const getAllUsers = createAsyncThunk(\"auth/getAllUsers\", async (_, thunkApi) => { \r\n  try {\r\n    const token = thunkApi.getState().auth.user.token;\r\n    return await authService.getAllUser(token);\r\n  } catch (err) {\r\n    const message =\r\n      (err.message && err.response.data && err.response.data.message) ||\r\n      err.message ||\r\n      err.toString();\r\n\r\n    return thunkApi.rejectWithValue(message);\r\n  }\r\n})\r\n\r\nexport const disableUsers = createAsyncThunk(\"auth/disable\", async (data, thunkApi) => {\r\n  try {\r\n    const token = thunkApi.getState().auth.user.token;\r\n    return await authService.disableUser(token, data);\r\n  } catch (err) {\r\n    const message =\r\n      (err.message && err.response.data && err.response.data.message) ||\r\n      err.message ||\r\n      err.toString();\r\n\r\n    return thunkApi.rejectWithValue(message);\r\n  }\r\n})\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isError = false;\r\n      state.isSuccess = false;\r\n      state.isLoading = false;\r\n      state.message = \"\";\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.users.push(actions.payload);\r\n      })\r\n      .addCase(register.rejected, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = actions.payload;\r\n        state.users = null;\r\n      })\r\n      .addCase(getAllUsers.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAllUsers.fulfilled, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.users = actions.payload\r\n      })\r\n      .addCase(getAllUsers.rejected, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = actions.payload;\r\n        state.users = null;\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = actions.payload;\r\n      })\r\n      .addCase(login.rejected, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = actions.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      })\r\n      .addCase(disableUsers.fulfilled, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.users.filter((user) => user._id === actions.payload._id );\r\n      })\r\n      .addCase(disableUsers.rejected, (state, actions) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = actions.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(disableUsers.pending, (state, actions) => {\r\n        state.isLoading = true;\r\n \r\n      })\r\n   },\r\n});\r\n\r\n// Logout User\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await authService.logOUt();\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\task\\taskSlice.js",[],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\auth\\authService.js",["88"],[],"import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/user/\";\r\n\r\n\r\n// Register User\r\nconst register = async (token, userData) => {\r\n  console.log(\"register\")\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n \r\n\r\n  }\r\n  const  {name, email, password} = userData\r\n  const response = await axios.post('api/user', {name, email, password},  config );\r\n  return response.data;\r\n};\r\n\r\n// Login User\r\nconst login = async (userData) => {\r\n  const response = await axios.post(\"http://localhost:8000/api/user/login\", userData);\r\n\r\n  if (response.data) {\r\n    const token = response.data.token\r\n    localStorage.setItem(\"token\", token)\r\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n  }\r\n\r\n  return response.data;\r\n};\r\n\r\nconst getAllUser = async (token) => { \r\n  const config = {\r\n    headers: {\r\n      Authorization : `Bearer ${token}`\r\n    }\r\n\r\n  }\r\n \r\n  const res = await axios.get(\"http://localhost:8000/api/user/users\", config)\r\n  return res.data\r\n}\r\n\r\nconst disableUser = async (token, data) => { \r\n  const config = {\r\n    headers: {\r\n      Authorization : `Bearer ${token}`\r\n    }\r\n\r\n  }\r\n  const { enabled, email } = data\r\n  const enable = !enabled\r\n  const res = await axios.post(\"http://localhost:8000/api/user/disable\", {enable, email}, config)\r\n  return res.data\r\n\r\n}\r\n\r\nexport const logOUt = () => {\r\n  localStorage.removeItem(\"user\");\r\n  localStorage.remove(\"token\")\r\n  window.location.reload()\r\n};\r\n   \r\nconst authService = {\r\n  register,\r\n  logOUt,\r\n  login,\r\n  getAllUser,\r\n  disableUser\r\n};\r\n\r\nexport default authService;","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\features\\task\\taskService.js",[],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\Login.jsx",["89"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../features/auth/authSlice';\r\nimport Spinner from './Spinner';\r\n\r\nexport default function Login() {\r\n    const {user, isSuccess, isError, isLoading} = useSelector(state => state.auth)\r\nconst dispatch = useDispatch()\r\n    const [email, setEmail] = useState()\r\n    const [password, setPassword] = useState()\r\n    \r\n\r\n    const  onSubmit = (e) => {\r\n        e.preventDefault()\r\n  \r\n         \r\n        const userData = { email, password }\r\n          dispatch(login(userData))\r\n          \r\n    }\r\n    useEffect(() => {\r\n        if (isSuccess) { \r\n            window.location.reload();\r\n        }\r\n \r\n\r\n    },[isSuccess, isError])\r\n\r\n    if (isLoading) {\r\n        <Spinner />\r\n    }\r\n    return (\r\n        <div className=\"relative flex flex-col justify-center min-h-screen overflow-hidden\">\r\n            <div className=\"w-full p-6 m-auto bg-white rounded-md shadow-md lg:max-w-xl\">\r\n                <h1 className=\"text-3xl font-semibold text-center text-purple-700 underline\">\r\n                   Sign in\r\n                </h1>\r\n                <form className=\"mt-6\" onSubmit={onSubmit}>\r\n                    <div className=\"mb-2\">\r\n                        <label\r\n                            for=\"email\"\r\n                            className=\"block text-sm font-semibold text-gray-800\"\r\n                        >\r\n                            Email\r\n                        </label>\r\n                        <input\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            type=\"email\"\r\n                            className=\"block w-full px-4 py-2 mt-2 text-purple-700 bg-white border rounded-md focus:border-purple-400 focus:ring-purple-300 focus:outline-none focus:ring focus:ring-opacity-40\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <label\r\n                            for=\"password\"\r\n                            className=\"block text-sm font-semibold text-gray-800\"\r\n                        >\r\n                            Password\r\n                        </label>\r\n                        <input\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            \r\n                            type=\"password\"\r\n                            className=\"block w-full px-4 py-2 mt-2 text-purple-700 bg-white border rounded-md focus:border-purple-400 focus:ring-purple-300 focus:outline-none focus:ring focus:ring-opacity-40\"\r\n                        />\r\n                    </div>\r\n                      <div className=\"mt-6\">\r\n                        <button className=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-purple-700 rounded-md hover:bg-purple-600 focus:outline-none focus:bg-purple-600\">\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n \r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\AddNewUser.jsx",[],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\AllUsers.jsx",["90","91","92"],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\AllTasks.jsx",["93","94","95","96","97","98","99","100","101","102"],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\UserTasks.jsx",["103","104","105","106"],[],"C:\\Users\\zahii\\Desktop\\taskcreating-MERN-app\\frontend\\src\\components\\Spinner.jsx",[],[],{"ruleId":"107","severity":1,"message":"108","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":14,"column":3,"nodeType":"109","messageId":"110","endLine":14,"endColumn":7},{"ruleId":"112","severity":1,"message":"113","line":25,"column":26,"nodeType":"114","messageId":"115","endLine":25,"endColumn":28},{"ruleId":"107","severity":1,"message":"116","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"117","line":5,"column":7,"nodeType":"109","messageId":"110","endLine":5,"endColumn":12},{"ruleId":"107","severity":1,"message":"118","line":3,"column":7,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":7,"column":12,"nodeType":"109","messageId":"110","endLine":7,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":27,"column":8,"nodeType":"122","endLine":27,"endColumn":10,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"113","line":81,"column":77,"nodeType":"114","messageId":"115","endLine":81,"endColumn":79},{"ruleId":"112","severity":1,"message":"113","line":81,"column":231,"nodeType":"114","messageId":"115","endLine":81,"endColumn":233},{"ruleId":"107","severity":1,"message":"124","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"125","line":3,"column":20,"nodeType":"109","messageId":"110","endLine":3,"endColumn":36},{"ruleId":"107","severity":1,"message":"126","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":11},{"ruleId":"107","severity":1,"message":"127","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"128","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":18},{"ruleId":"107","severity":1,"message":"129","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"130","line":9,"column":7,"nodeType":"109","messageId":"110","endLine":9,"endColumn":12},{"ruleId":"120","severity":1,"message":"121","line":32,"column":6,"nodeType":"122","endLine":32,"endColumn":8,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"113","line":57,"column":45,"nodeType":"114","messageId":"115","endLine":57,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":58,"column":46,"nodeType":"114","messageId":"115","endLine":58,"endColumn":48},{"ruleId":"120","severity":1,"message":"121","line":37,"column":6,"nodeType":"122","endLine":37,"endColumn":8,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"113","line":50,"column":18,"nodeType":"114","messageId":"115","endLine":50,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":76,"column":98,"nodeType":"114","messageId":"115","endLine":76,"endColumn":100},{"ruleId":"112","severity":1,"message":"113","line":77,"column":48,"nodeType":"114","messageId":"115","endLine":77,"endColumn":50},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'token' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'useState' is defined but never used.","'updateTaskStatus' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Modal' is defined but never used.","'style' is assigned a value but never used.",["134"],["135"],{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"136","fix":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},{"range":"142","text":"141"},{"range":"143","text":"141"},[833,835],"[dispatch]",[858,860],[1095,1097]]