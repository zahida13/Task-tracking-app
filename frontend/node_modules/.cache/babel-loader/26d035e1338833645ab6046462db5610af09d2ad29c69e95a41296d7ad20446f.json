{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport taskService from \"./taskService\";\nconst initialState = {\n  task: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\n\n// Create New Goal\n\nexport const createTask = createAsyncThunk(\"goals/create\", async (goalData, thunkApi) => {\n  try {\n    const token = thunkApi.getState().auth.user.token;\n    return await taskService.createGoal(goalData, token);\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\n\n// Get User Goals\n\nexport const getTasks = createAsyncThunk(\"task/getall\", async (_, thunkApi) => {\n  try {\n    //   const token = thunkApi.getState().auth.user.token;\n    const data = await taskService.getAllTasks();\n    return data;\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\n\n// Create goal slice\nexport const taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(getTasks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTasks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.task = action.payload;\n    }).addCase(createTasks.pending, state => {\n      state.isLoading = true;\n    }).addCase(createTasks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.task.push(action.payload);\n    }).addCase(createTasks.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","taskService","initialState","task","isError","isSuccess","isLoading","message","createTask","goalData","thunkApi","token","getState","auth","user","createGoal","err","response","data","toString","rejectWithValue","getTasks","_","getAllTasks","taskSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","createTasks","push","rejected","actions","reducer"],"sources":["C:/Users/zahii/Desktop/taskcreating-MERN-app/frontend/src/features/task/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport taskService from \"./taskService\";\r\n\r\nconst initialState = {\r\n  task: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\n// Create New Goal\r\n\r\nexport const createTask = createAsyncThunk(\r\n  \"goals/create\",\r\n  async (goalData, thunkApi) => {\r\n    try {\r\n      const token = thunkApi.getState().auth.user.token;\r\n      return await taskService.createGoal(goalData, token);\r\n    } catch (err) {\r\n      const message =\r\n        (err.message && err.response.data && err.response.data.message) ||\r\n        err.message ||\r\n        err.toString();\r\n\r\n      return thunkApi.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get User Goals\r\n\r\nexport const getTasks = createAsyncThunk(\r\n  \"task/getall\",\r\n  async (_, thunkApi) => {\r\n      try {\r\n    //   const token = thunkApi.getState().auth.user.token;\r\n      const data = await taskService.getAllTasks();\r\n      return data;\r\n    } catch (err) {\r\n      const message =\r\n        (err.message && err.response.data && err.response.data.message) ||\r\n        err.message ||\r\n        err.toString();\r\n\r\n      return thunkApi.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Create goal slice\r\nexport const taskSlice = createSlice({\r\n  name: \"task\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      .addCase(getTasks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getTasks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.task = action.payload;\r\n      })\r\n\r\n      .addCase(createTasks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createTasks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.task.push(action.payload);\r\n      })\r\n      .addCase(createTasks.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n  \r\n  },\r\n});\r\n\r\n \r\nexport const { reset } = taskSlice.actions;\r\nexport default taskSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}