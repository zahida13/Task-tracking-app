{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahii\\\\Desktop\\\\taskcreating-MERN-app\\\\frontend\\\\src\\\\components\\\\UserTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTasks } from '../features/task/taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    task\n  } = useSelector(state => state.task);\n  useEffect(() => {\n    dispatch(getUserTask());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-9 \",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mx-auto table-auto w-9/12 text-purple-700 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-purple-900 text-white font-normal h-[3rem]\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"space-y-4 !px-10\",\n        children: task === null || task === void 0 ? void 0 : task.map(tas => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \" border !h-[3rem]\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", tas === null || tas === void 0 ? void 0 : tas.task]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", tas === null || tas === void 0 ? void 0 : tas.deadline]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: ` ${tas.isExpired == true ? 'text-red-500 hover:bg-red-700 hover:text-white bg-white' : \"text-purple-600 bg-white hover:bg-purple-700 hover:text-white\"}`,\n              children: [\" \", tas !== null && tas !== void 0 && tas.isExpired ? \"Expired\" : \"Not Expired\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, tas === null || tas === void 0 ? void 0 : tas._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_s(UserDashboard, \"1T4gBK4J8u+t+MX5Q+6T7S9zo1E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","getTasks","jsxDEV","_jsxDEV","UserDashboard","_s","dispatch","task","state","getUserTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tas","deadline","isExpired","_id","_c","$RefreshReg$"],"sources":["C:/Users/zahii/Desktop/taskcreating-MERN-app/frontend/src/components/UserTasks.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getTasks } from '../features/task/taskSlice'\r\n\r\nconst UserDashboard = () => {\r\nconst dispatch = useDispatch()\r\n\r\n  const { task } = useSelector(state => state.task)\r\n  useEffect(() => {\r\n      dispatch(getUserTask())\r\n  }, [])\r\n  return (\r\n      <div className='p-9 '>\r\n          <table className=\"mx-auto table-auto w-9/12 text-purple-700 bg-white\">\r\n          <thead className='bg-purple-900 text-white font-normal h-[3rem]'>\r\n            <tr>\r\n              <th className='text-2xl'>Task</th>\r\n              <th className='text-2xl'>Deadline</th>\r\n              <th className='text-2xl'>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='space-y-4 !px-10'>\r\n      {task?.map((tas) => {\r\n        return (\r\n            <tr className=' border !h-[3rem]' key={tas?._id}>\r\n              <td> {tas?.task}</td>\r\n              <td> { tas?.deadline}</td>\r\n              <td className={` ${tas.isExpired == true ? 'text-red-500 hover:bg-red-700 hover:text-white bg-white' : \"text-purple-600 bg-white hover:bg-purple-700 hover:text-white\"}`}> {tas?.isExpired ? \"Expired\" : \"Not Expired\"} </td>\r\n            </tr>\r\n \r\n )      })}      \r\n </tbody>\r\n</table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserDashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}