{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahii\\\\Desktop\\\\taskcreating-MERN-app\\\\frontend\\\\src\\\\components\\\\UserTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../features/auth/authSlice';\nimport { getUserTasks, updateTaskStatus } from '../features/task/taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    task\n  } = useSelector(state => state.task);\n  useEffect(() => {\n    dispatch(getUserTasks());\n  }, []);\n  const [status, setStatus] = useState();\n  useEffect(() => {\n    setInterval(() => {\n      // dispatch(getExpiredOnes())\n    }, 60000);\n  }, []);\n  const taskUpdater = task => {\n    task.status == \"completed\" ? setStatus(\"pending\") : setStatus(\"completed\");\n    const id = task._id;\n    dispatch(updateTaskStatus({\n      id,\n      status\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-9 flex flex-col justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"p-2 w-[6rem] bg-white outline-red-900 text-red-800 hover:text-white hover:bg-red-700\",\n      onClick: () => dispatch(logout()),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), task.length < 1 ? \"You Have No Tasks To Display\" : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mx-auto table-auto w-9/12 text-purple-700 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-purple-900 text-white font-normal h-[3rem]\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-2xl\",\n            children: \"Expire status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"space-y-4 !px-10\",\n        children: task === null || task === void 0 ? void 0 : task.map(tas => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \" border !h-[3rem]\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", tas === null || tas === void 0 ? void 0 : tas.task]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", tas === null || tas === void 0 ? void 0 : tas.deadline]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => taskUpdater(tas),\n              className: `  ${!isDisabled ? tas.status == \"pending\" ? 'text-yellow-600 bg-white hover:bg-yellow-500 hover:text-white' : \"text-green-600 bg-white hover:bg-green-700 hover:text-white\" : 'bg-gray-600 text-white '}`,\n              children: [\" \", tas === null || tas === void 0 ? void 0 : tas.status, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: ` ${tas.isExpired == true ? 'text-red-500 hover:bg-red-700 hover:text-white bg-white' : \"text-purple-600 bg-white hover:bg-purple-700 hover:text-white\"}`,\n              children: [\" \", tas !== null && tas !== void 0 && tas.isExpired ? \"Expired\" : \"Not Expired\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, tas === null || tas === void 0 ? void 0 : tas._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"pCX5ZtglAgwGsgK6hj/OfJAV3l0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","logout","getUserTasks","updateTaskStatus","jsxDEV","_jsxDEV","UserDashboard","_s","dispatch","task","state","status","setStatus","setInterval","taskUpdater","id","_id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","tas","deadline","isDisabled","isExpired","_c","$RefreshReg$"],"sources":["C:/Users/zahii/Desktop/taskcreating-MERN-app/frontend/src/components/UserTasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logout } from '../features/auth/authSlice'\r\nimport { getUserTasks, updateTaskStatus } from '../features/task/taskSlice'\r\n\r\nconst UserDashboard = () => {\r\nconst dispatch = useDispatch()\r\n\r\n  const { task } = useSelector(state => state.task)\r\n  useEffect(() => {\r\n      dispatch(getUserTasks())\r\n  }, [])\r\n\r\n  const [status, setStatus] = useState()\r\n\r\nuseEffect(() => {\r\n  \r\n  setInterval(() => {\r\n    // dispatch(getExpiredOnes())\r\n  }, 60000)\r\n}, [])\r\n\r\nconst taskUpdater = (task) => {\r\n  task.status == \"completed\" ? setStatus(\"pending\") : setStatus(\"completed\")\r\n  const id = task._id\r\n  dispatch(updateTaskStatus({id, status}))\r\n  }  \r\n  \r\n  \r\n  return (\r\n    <div className='p-9 flex flex-col justify-center items-center'>\r\n      <button className='p-2 w-[6rem] bg-white outline-red-900 text-red-800 hover:text-white hover:bg-red-700' onClick={() => dispatch(logout())}>Log Out</button>\r\n      {task.length < 1 ? \"You Have No Tasks To Display\" :\r\n          <table className=\"mx-auto table-auto w-9/12 text-purple-700 bg-white\">\r\n          <thead className='bg-purple-900 text-white font-normal h-[3rem]'>\r\n            <tr>\r\n              <th className='text-2xl'>Task</th>\r\n              <th className='text-2xl'>Deadline</th>\r\n              <th className='text-2xl'>Status</th>\r\n              <th className='text-2xl'>Expire status</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody className='space-y-4 !px-10'>\r\n      {task?.map((tas) => {\r\n        return (\r\n            <tr className=' border !h-[3rem]' key={tas?._id}>\r\n              <td> {tas?.task}</td>\r\n            <td> {tas?.deadline}</td>\r\n            <td onClick={() => taskUpdater(tas)} className={`  ${ !isDisabled ?  (tas.status == \"pending\" ? 'text-yellow-600 bg-white hover:bg-yellow-500 hover:text-white' : \"text-green-600 bg-white hover:bg-green-700 hover:text-white\") : 'bg-gray-600 text-white '}`}> {tas?.status} </td>\r\n              <td className={` ${tas.isExpired == true ? 'text-red-500 hover:bg-red-700 hover:text-white bg-white' : \"text-purple-600 bg-white hover:bg-purple-700 hover:text-white\"}`}> {tas?.isExpired ? \"Expired\" : \"Not Expired\"} </td>\r\n            </tr>\r\n \r\n )      })}      \r\n </tbody>\r\n</table>\r\n         }\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserDashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}