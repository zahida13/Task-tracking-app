{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"/api/user/\";\n\n// Register User\nconst register = async userData => {\n  console.log(\"register\");\n  const token = localStorage.getItem(\"user\");\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const {\n    name,\n    email,\n    password\n  } = userData;\n  console.log(name, email, password, token);\n  const response = await axios.post('api/user', {\n    name,\n    email,\n    password\n  }, config);\n  return response.data;\n};\n\n// Login User\nconst login = async userData => {\n  const response = await axios.post(\"http://localhost:8000/api/user/login\", userData);\n  if (response.data) {\n    const token = response.data.token;\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", response.data);\n  }\n  return response.data;\n};\nconst getAllUser = async () => {\n  const token = localStorage.getItem(\"user\");\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const res = await axios.get(\"http://localhost:8000/api/user/users\", config);\n  return res.data;\n};\nconst disableUser = async data => {\n  const token = localStorage.getItem(\"user\");\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const {\n    enabled,\n    email\n  } = data;\n  const enable = !enabled;\n  const res = await axios.post(\"http://localhost:8000/api/user/disable\", {\n    enable,\n    email\n  }, config);\n  return res.data;\n};\nexport const logOUt = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.remove(\"token\");\n};\nconst authService = {\n  register,\n  logOUt,\n  login,\n  getAllUser,\n  disableUser\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","console","log","token","localStorage","getItem","config","headers","Authorization","name","email","password","response","post","data","login","setItem","getAllUser","res","get","disableUser","enabled","enable","logOUt","removeItem","remove","authService"],"sources":["C:/Users/zahii/Desktop/taskcreating-MERN-app/frontend/src/features/auth/authService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/user/\";\r\n\r\n// Register User\r\nconst register = async (userData) => {\r\n  console.log(\"register\")\r\n  const token = localStorage.getItem(\"user\")\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n \r\n\r\n  }\r\n  const  {name, email, password} = userData\r\n  console.log(name, email, password, token)\r\n  const response = await axios.post('api/user', {name, email, password},  config );\r\n  return response.data;\r\n};\r\n\r\n// Login User\r\nconst login = async (userData) => {\r\n  const response = await axios.post(\"http://localhost:8000/api/user/login\", userData);\r\n\r\n  if (response.data) {\r\n    const token = response.data.token\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"user\", response.data);\r\n\r\n  }\r\n\r\n  return response.data;\r\n};\r\n\r\nconst getAllUser = async () => { \r\n  const token = localStorage.getItem(\"user\")\r\n  const config = {\r\n    headers: {\r\n      Authorization : `Bearer ${token}`\r\n    }\r\n\r\n  }\r\n\r\n  const res = await axios.get(\"http://localhost:8000/api/user/users\", config)\r\n  return res.data\r\n}\r\n\r\nconst disableUser = async (data) => { \r\n  const token = localStorage.getItem(\"user\")\r\n  const config = {\r\n    headers: {\r\n      Authorization : `Bearer ${token}`\r\n    }\r\n\r\n  }\r\n  const { enabled, email } = data\r\n  const enable = !enabled\r\n  const res = await axios.post(\"http://localhost:8000/api/user/disable\", {enable, email}, config)\r\n  return res.data\r\n\r\n}\r\n\r\nexport const logOUt = () => {\r\n  localStorage.removeItem(\"user\");\r\n  localStorage.remove(\"token\")\r\n};\r\n   \r\nconst authService = {\r\n  register,\r\n  logOUt,\r\n  login,\r\n  getAllUser,\r\n  disableUser\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,YAAY;;AAE5B;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC1C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASL,KAAM;IACjC;EAGF,CAAC;EACD,MAAO;IAACM,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGX,QAAQ;EACzCC,OAAO,CAACC,GAAG,CAACO,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAER,KAAK,CAAC;EACzC,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,UAAU,EAAE;IAACJ,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,EAAGL,MAAM,CAAE;EAChF,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG,MAAOf,QAAQ,IAAK;EAChC,MAAMY,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,sCAAsC,EAAEb,QAAQ,CAAC;EAEnF,IAAIY,QAAQ,CAACE,IAAI,EAAE;IACjB,MAAMX,KAAK,GAAGS,QAAQ,CAACE,IAAI,CAACX,KAAK;IACjCC,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;IACpCC,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEJ,QAAQ,CAACE,IAAI,CAAC;EAE7C;EAEA,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC1C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAI,UAASL,KAAM;IAClC;EAEF,CAAC;EAED,MAAMe,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,sCAAsC,EAAEb,MAAM,CAAC;EAC3E,OAAOY,GAAG,CAACJ,IAAI;AACjB,CAAC;AAED,MAAMM,WAAW,GAAG,MAAON,IAAI,IAAK;EAClC,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC1C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAI,UAASL,KAAM;IAClC;EAEF,CAAC;EACD,MAAM;IAAEkB,OAAO;IAAEX;EAAM,CAAC,GAAGI,IAAI;EAC/B,MAAMQ,MAAM,GAAG,CAACD,OAAO;EACvB,MAAMH,GAAG,GAAG,MAAMrB,KAAK,CAACgB,IAAI,CAAC,wCAAwC,EAAE;IAACS,MAAM;IAAEZ;EAAK,CAAC,EAAEJ,MAAM,CAAC;EAC/F,OAAOY,GAAG,CAACJ,IAAI;AAEjB,CAAC;AAED,OAAO,MAAMS,MAAM,GAAGA,CAAA,KAAM;EAC1BnB,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;EAC/BpB,YAAY,CAACqB,MAAM,CAAC,OAAO,CAAC;AAC9B,CAAC;AAED,MAAMC,WAAW,GAAG;EAClB3B,QAAQ;EACRwB,MAAM;EACNR,KAAK;EACLE,UAAU;EACVG;AACF,CAAC;AAED,eAAeM,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}