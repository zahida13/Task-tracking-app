{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport taskService from \"./taskService\";\nconst initialState = {\n  task: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\n\n// Create New Goal\n\nexport const createTask = createAsyncThunk(\"goals/create\", async (taskData, thunkApi) => {\n  try {\n    return await taskService.createTask(taskData);\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\n\n// Get User Goals\n\nexport const getTasks = createAsyncThunk(\"task/getall\", async (_, thunkApi) => {\n  try {\n    const token = thunkApi.getState().auth.user.token;\n    const data = await taskService.getAllTasks(token);\n    return data;\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\nexport const expiredChecker = createAsyncThunk(\"expired/checker\", async (_, thunkApi) => {\n  try {\n    const data = await taskService.expiredChecker();\n    return data;\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\nexport const updateTaskStatus = createAsyncThunk(\"task/updateStatus\", async (_ref, thunkApi) => {\n  let {\n    id,\n    status\n  } = _ref;\n  try {\n    const data = await taskService.updateTaskStatus(id, status);\n    return data;\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\nexport const getUserTasks = createAsyncThunk(\"task/user\", async (_, thunkApi) => {\n  try {\n    const data = await taskService.getUserTasks();\n    return data;\n  } catch (err) {\n    const message = err.message && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\n\n// Create goal slice\nexport const taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(getTasks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTasks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.task = action.payload;\n    }).addCase(getUserTasks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUserTasks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.task = action.payload;\n    }).addCase(getUserTasks.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(createTask.pending, state => {\n      state.isLoading = true;\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.task.push(action.payload);\n    }).addCase(createTask.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","taskService","initialState","task","isError","isSuccess","isLoading","message","createTask","taskData","thunkApi","err","response","data","toString","rejectWithValue","getTasks","_","token","getState","auth","user","getAllTasks","expiredChecker","updateTaskStatus","_ref","id","status","getUserTasks","taskSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","push","actions","reducer"],"sources":["C:/Users/zahii/Desktop/taskcreating-MERN-app/frontend/src/features/task/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport taskService from \"./taskService\";\r\n\r\nconst initialState = {\r\n  task: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\n// Create New Goal\r\n\r\nexport const createTask = createAsyncThunk(\r\n  \"goals/create\",\r\n  async (taskData, thunkApi) => {\r\n    try\r\n    {\r\n\r\n      return await taskService.createTask(taskData);\r\n    } catch (err) {\r\n      const message =\r\n        (err.message && err.response.data && err.response.data.message) ||\r\n        err.message ||\r\n        err.toString();\r\n\r\n      return thunkApi.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get User Goals\r\n\r\nexport const getTasks = createAsyncThunk(\r\n  \"task/getall\",\r\n  async (_, thunkApi) => {\r\n      try {\r\n      const token = thunkApi.getState().auth.user.token;\r\n      const data = await taskService.getAllTasks(token);\r\n      return data;\r\n    } catch (err) {\r\n      const message =\r\n        (err.message && err.response.data && err.response.data.message) ||\r\n        err.message ||\r\n        err.toString();\r\n\r\n      return thunkApi.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const expiredChecker = createAsyncThunk(\"expired/checker\", async (_, thunkApi) => { \r\n    try {\r\n    const data = await taskService.expiredChecker();\r\n    return data;\r\n  } catch (err) {\r\n    const message =\r\n      (err.message && err.response.data && err.response.data.message) ||\r\n      err.message ||\r\n      err.toString();\r\n\r\n    return thunkApi.rejectWithValue(message);\r\n  }\r\n})\r\n\r\n\r\nexport const updateTaskStatus = createAsyncThunk(\"task/updateStatus\", async ({ id, status }, thunkApi) => { \r\n  try {\r\n\r\n    const data = await taskService.updateTaskStatus(id, status);\r\n    return data;\r\n  } catch (err) {\r\n    const message =\r\n      (err.message && err.response.data && err.response.data.message) ||\r\n      err.message ||\r\n      err.toString();\r\n\r\n    return thunkApi.rejectWithValue(message);\r\n  }\r\n})\r\n\r\n\r\nexport const getUserTasks = createAsyncThunk(\"task/user\", async (_, thunkApi) => { \r\n  try {\r\n\r\n    const data = await taskService.getUserTasks();\r\n    return data;\r\n  } catch (err) {\r\n    const message =\r\n      (err.message && err.response.data && err.response.data.message) ||\r\n      err.message ||\r\n      err.toString();\r\n\r\n    return thunkApi.rejectWithValue(message);\r\n  }\r\n})\r\n\r\n// Create goal slice\r\nexport const taskSlice = createSlice({\r\n  name: \"task\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      .addCase(getTasks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getTasks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.task = action.payload;\r\n      })\r\n      .addCase(getUserTasks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUserTasks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.task = action.payload;\r\n      })\r\n      .addCase(getUserTasks.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n\r\n      .addCase(createTask.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createTask.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.task.push(action.payload);\r\n      })\r\n      .addCase(createTask.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n  \r\n  },\r\n});\r\n\r\n \r\nexport const { reset } = taskSlice.actions;\r\nexport default taskSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}